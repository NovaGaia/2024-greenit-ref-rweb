---
import { capitalizeFirstLetter } from "@i18n/utils";
import { slugify } from "@js/utils";
import { Icon } from "astro-icon/components";

const { datas } = Astro.props;
const styles = datas.map((item) => {
  return item.values.map((child) => {
    return `.group:has(#cb_${slugify(item.name)}_${slugify(child)}:checked)
                    .tohide:not(:has([data-${slugify(item.name)}="${slugify(child)}"])) {
                    animation: slideaway 200ms;
                    display: none;
                }`;
  });
});
---

<section class="group flex flex-col gap-4">
  <div class="grid-cols-1 sm:col-span-3">
    <label
      for="filter-state"
      role="button"
      class="btn btn-outline inline-flex items-center gap-2 p-3"
    >
      <span>
        <span class="inline group-has-[#filter-state:checked]:hidden"
          >Afficher</span
        ><span class="hidden group-has-[#filter-state:checked]:inline"
          >Masquer</span
        > les filtres
      </span>
      <input id="filter-state" type="checkbox" class="hidden" />
      <Icon
        name="tabler:circle-chevron-right"
        class="inline group-has-[#filter-state:checked]:hidden"
        width={24}
        height={24}
      />
      <Icon
        name="tabler:circle-chevron-down"
        class="hidden group-has-[#filter-state:checked]:inline"
        width={24}
        height={24}
      />
    </label>
  </div>
  <div
    class="hidden grid-cols-1 gap-3 rounded border border-primary p-4 group-has-[#filter-state:checked]:grid sm:grid-cols-3"
  >
    <div class="col-span-3 hidden"><h2 class="font-black">Cat√©gories</h2></div>
    {
      datas.map((item) => {
        return (
          <div>
            <p class="mb-2 font-black">
              {capitalizeFirstLetter(item.name?.replaceAll("_", " "))}
            </p>
            <ul class="flex flex-col gap-1">
              {item.values.map((child) => {
                return (
                  <li>
                    <input
                      id={`cb_${slugify(item.name)}_${slugify(child)}`}
                      type="checkbox"
                      value={slugify(child)}
                    />
                    <label for={`cb_${slugify(item.name)}_${slugify(child)}`}>
                      {child}
                    </label>
                  </li>
                );
              })}
            </ul>
          </div>
        );
      })
    }
  </div>
  <style id="filter_styles" is:inline></style>
</section>
<script define:vars={{ styles: styles }}>
  //   console.log(JSON.stringify(styles, null, 2));
  document.getElementById("filter_styles").innerHTML = styles
    .join("\n")
    .replaceAll(",", "\n");
</script>
