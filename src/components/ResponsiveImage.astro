---
import type { ImageOutputFormat } from "astro";
import { getImage } from "astro:assets";

type Props = {
  src: ImageMetadata;
  alt: string;
  title?: string;
  format?: ImageOutputFormat;
  sizes: number[];
  classes?: string;
  frameClasses?: string;
};

async function generateResponsiveImage({
  src,
  format,
  sizes,
}: Omit<Props, "alt" | "classes">) {
  const imgSrcSet = sizes.map(async (size) => {
    const image = await getImage({ src, width: size, format });
    return `${image.src} ${size}w`;
  });

  const imgSrc = await getImage({ src, width: Math.max(...sizes), format });

  return {
    srcSet: await Promise.all(imgSrcSet),
    imgSrc: imgSrc.src,
  };
}

const {
  src,
  sizes,
  format = "webp",
  alt,
  title = "",
  classes,
  frameClasses,
} = Astro.props;

const { srcSet, imgSrc } = await generateResponsiveImage({
  src,
  sizes,
  format,
});
---

<div class:list={frameClasses}>
  <img
    srcset={srcSet.join(", ")}
    alt={alt}
    src={imgSrc}
    title={title}
    class={classes}
  />
</div>
