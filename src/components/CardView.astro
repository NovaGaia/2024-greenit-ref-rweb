---
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import { slugify } from "@js/utils";
import type { CollectionEntry } from "astro:content";
import Card from "./Card";

const REF_NAME = process.env.PUBLIC_REF_NAME;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

function cleanImpact(meta) {
  // TODO: replace with a proper translation
  let regexp: RegExp;
  switch (getLangFromUrl(Astro.url)) {
    case "es":
      regexp = /t("Fort")|t("Moyen")|t("Faible")/gi;
      break;
    case "en":
      regexp = /t("High")|t("Medium")|t("Low")/gi;
      break;
    default:
      regexp = /t("Fuerte")|t("Medio")|t("Débil")/gi;
      break;
  }
  return entry.data[`${meta}`].replace(regexp, " ");
}

type Props = {
  entry: CollectionEntry<"fiches" | "lexique" | "personas"> | any;
  type: string;
  display: string;
};

const {
  entry,
  type = Card.PERSONAS,
  display = Card.VERTICAL_LAYOUT,
} = Astro.props;
const [, ...entry_slug] = entry.slug.split("/");
---

<li
  class="tohide box interactive mb-4 border-neutral-transparent py-2 transition-all md:py-6"
>
  <a
    href={`${type === Card.FICHES && "fiches/"}${entry_slug}`}
    class:list={[
      "flex no-underline",
      {
        "h-full flex-row items-center justify-between gap-2":
          display === Card.HORIZONTAL_LAYOUT,
        "h-full flex-col divide-y-2 divide-primary":
          display === Card.VERTICAL_LAYOUT,
      },
    ]}
    title={`Voir la fiche : ${entry.data.title}`}
  >
    {
      type === Card.FICHES ? (
        <div
          class="mb-0 mt-0 text-lg font-bold text-neutral md:grid md:grid-cols-[2fr_1fr] md:grid-rows-2 md:gap-2"
          data-lifecycle={slugify(entry.data.lifecycle)}
          data-scope={slugify(entry.data.scope)}
          data-saved_resources={slugify(entry.data.saved_resources.join(" "))}
        >
          <h2 class="m-0 flex flex-row items-start text-lg font-bold text-neutral md:col-span-1 md:row-span-2">
            <span class="badge mr-2 whitespace-nowrap border-primary bg-primary">
              {REF_NAME} {entry.data.refID}
            </span>
            <span>{entry.data.title}</span>
          </h2>
          <div class="flex flex-row items-center justify-end gap-2">
            <span
              title={t("Priorité d'implémentation")}
              aria-label={`${t("Priorité d'implémentation")} : ${
                entry.data[`priority_implementation`]
              }`}
              role="img"
            >
              {t(cleanImpact("priority_implementation"))}
            </span>
            <span>|</span>
            <span
              title={t("Impact environnemental")}
              aria-label={`${t("Impact environnemental")} : ${
                entry.data[`environmental_impact`]
              }`}
              role="img"
            >
              {t(cleanImpact("environmental_impact"))}
            </span>
          </div>
          <div class="mt-2 flex flex-row items-center justify-end gap-2 md:mt-0 md:gap-4">
            <span
              title={t("lifecycle")}
              class="badge border-primary text-xs text-neutral"
            >
              {t(entry.data.lifecycle)}
            </span>
            <span
              title={t("scope")}
              class="badge border-primary text-xs text-neutral"
            >
              {t(entry.data.scope)}
            </span>
          </div>
        </div>
      ) : (
        <h3 class="mt-0">{entry.data.title}</h3>
      )
    }
  </a>
</li>
