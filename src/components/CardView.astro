---
import { getLangFromUrl, useTranslations } from "@i18n/utils";
import type { CollectionEntry } from "astro:content";
import Card from "./Card";
import FichesCard from "./fiches/FichesCard.astro";

const REF_NAME = process.env.PUBLIC_REF_NAME;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

function cleanImpact(meta) {
  // TODO: replace with a proper translation
  let regexp: RegExp;
  switch (getLangFromUrl(Astro.url)) {
    case "es":
      regexp = /t("Fort")|t("Moyen")|t("Faible")/gi;
      break;
    case "en":
      regexp = /t("High")|t("Medium")|t("Low")/gi;
      break;
    default:
      regexp = /t("Fuerte")|t("Medio")|t("DÃ©bil")/gi;
      break;
  }
  return entry.data[`${meta}`].replace(regexp, " ");
}

type Props = {
  entry: CollectionEntry<"fiches" | "lexique" | "personas"> | any;
  type: string;
  display: string;
};

const {
  entry,
  type = Card.PERSONAS,
  display = Card.VERTICAL_LAYOUT,
} = Astro.props;
const [, ...entry_slug] = entry.slug.split("/");
---

<li
  class="tohide box interactive mb-4 border-neutral-transparent py-2 transition-all md:py-6"
>
  <a
    href={`${type === Card.FICHES && "fiches/"}${entry_slug}`}
    class:list={[
      "flex no-underline",
      {
        "h-full flex-row items-center justify-between gap-2":
          display === Card.HORIZONTAL_LAYOUT,
        "h-full flex-col divide-y-2 divide-primary":
          display === Card.VERTICAL_LAYOUT,
      },
    ]}
    title={`Voir la fiche : ${entry.data.title}`}
  >
    {
      type === Card.FICHES ? (
        <FichesCard entry={entry} />
      ) : (
        <h3 class="mt-0">{entry.data.title}</h3>
      )
    }
  </a>
</li>
