---
import client from "@tina/__generated__/client";
import { getCollection, type CollectionEntry } from "astro:content";

// Pages props type
type Props = {
  entry: CollectionEntry<"pages">;
};

// generate getStaticPaths (params, props) from collection
export async function getStaticPaths() {
  const entries = await getCollection("pages");
  const paths = entries
    .filter((entry) => !entry.slug.includes("/"))
    .filter((entry) => entry.data.published)
    .map((entry) => {
      return {
        params: { slug: entry.slug || undefined },
        props: { entry },
      };
    });

  return paths;
}

// Get entry activated by getStaticPaths
const { entry } = Astro.props;
let response: any = {};
try {
  await client.queries
    .pages({
      relativePath: `/${entry.id}`,
    })
    .then((res) => {
      response = res;
    });
} catch (error) {
  // not in edit mode
}

// Use Astro Entry renderer
const { Content } = await entry.render();
---

<Content />
